/*
 |----------------------------------------------------------------
 |  Column Grid
 |----------------------------------------------------------------
 */
@mixin row($nested: false) {
    display: flex;
    flex: 0 1 auto;
    flex-direction: row;
    flex-wrap: wrap;
    max-width: $max-width;

    @if ($nested) {
        margin-left: -$gutter;
        margin-right: -$gutter;
    } @else {
        margin-right: auto;
        margin-left: auto;
    }
}

@mixin row-gutter($gap, $nested: true, $important: true) {
    @if $important == true {
        $important: !important;
    } @else {
        $important: '';
    }

    @if $nested == true {
        margin-right: #{-$gap} #{$important};
        margin-left: #{-$gap} #{$important};
    }

    > * {
        padding-right: $gap;
        padding-left: $gap;
    }
}

@mixin row-nowrap() {
    flex-wrap: nowrap;
}

@mixin row-center() {
    justify-content: center;
}

@mixin row-right() {
    justify-content: flex-end;
}

@mixin row-middle() {
    align-items: center;
}

@mixin row-bottom() {
    align-items: flex-end;
}

@mixin row-reverse() {
    flex-direction: row-reverse;
}

@mixin columns() {
    padding-left: $gutter;
    padding-right: $gutter;
}

@mixin columns-class($num, $divider: $columns) {
    flex-basis: calc(#{$num} / #{$divider} * 100%);
    max-width: calc(#{$num} / #{$divider} * 100%);
}

@mixin push-right($num, $divider: $columns) {
    margin-left: calc(#{$num} / #{$divider} * 100%);
}

@mixin push-left($num, $divider: $columns) {
    margin-right: calc(#{$num} / #{$divider} * 100%);
}

@mixin column-center() {
    margin-left: auto;
    margin-right: auto;
}

@mixin column-right() {
    margin-right: 0;
    margin-left: auto;
}

/*
 |----------------------------------------------------------------
 |  Block Grid
 |----------------------------------------------------------------
 */
@mixin block-grid($nested: true) {
    display: flex;
    flex: 0 1 auto;
    flex-direction: row;
    flex-wrap: wrap;
    margin: 0 #{-$gutter};
    padding: 0;
    list-style: none;

    @if $nested == false {
        margin-right: 0;
        margin-left: 0;
    }
}

@mixin block-grid-gutter($gap, $nested: true) {
    @if $nested == false {
        margin-right: 0;
        margin-left: 0;
    } @else {
        margin-right: -$gap;
        margin-left: -$gap;
    }

    > * {
        padding-right: $gap;
        padding-left: $gap;
    }
}

@mixin block-grid-item() {
    padding-left: $gutter;
    padding-right: $gutter;
}

@mixin block-grid-class($num) {
    > * {
        flex-basis: calc(1 / #{$num} * 100%);
        max-width:  calc(1 / #{$num} * 100%);
    }
}

@mixin block-grid-center() {
    justify-content: center;
}

@mixin block-grid-right() {
    justify-content: flex-end;
}

@mixin block-grid-spread() {
    justify-content: space-between;
}

@mixin block-grid-equal() {
    justify-content: space-around;
}

@mixin block-grid-middle() {
    align-items: center;
}

@mixin block-grid-bottom() {
    align-items: flex-end;
}

@mixin block-grid-stretch() {
    > * {
        flex-grow: 1;
        max-width: 100%;
    }
}

@mixin block-grid-flatten() {
    > * {
        display: flex;

        > * {
            width: 100%;
        }
    }
}
